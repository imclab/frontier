// Data driven entities/game structure -- imagine building a game entirely from json files
// that powers editors, scripting tools and dynamic downloading of new content without code changes (ya!)


// This is just a prototype of the new data driven system -- NOT YET COMPLETE
// Next steps:
// Complete the entities loading below
// Add createFromJSON methods to all classes (how much is this needed? can we just call class.create(pc.optionsFromJson()); inside the json factory?
// Next: can we integrate json loading into tiled?
// Next Next:
{
    "resources":
    {
        "images":
        [
            { "name":"player-ship", "url":"images/ship1.png" },
            { "name":"stars", "url":"images/stars.png" },
            { "name":"explosions", "url":"images/smallexplosions.png" },
            { "name":"plasma-fire", "url":"images/flareblue16.png" },
            { "name":"asteroids1", "url":"images/asteroid1.png" },
            { "name":"asteroid-small", "url":"images/asteroid-small.png" },
            { "name":"smoke", "url":"images/smoke1.png" }
        ],

        "sounds":
        [
            { "name":"fire", "url":"sounds/lowfire", "formats":["ogg", "mp3"], "channels":15 },
            { "name":"explosion", "url":"sounds/explosion", "formats":["ogg", "mp3"], "channels":12 },
            { "name":"music1", "url":"sounds/flashforward", "formats":["ogg", "mp3"], "channels":1 }
        ]
    },

    "spriteSheets":
    {
        "1":"2"
    },

    "scene":
    {
        "name":"game",
        "layers":
        [
        ]

    },

    "entity":
    {
        "tags":["asteroid-small"],
        "components":
        [
            {"pc.components.Sprite": { "currentFrame":10, "spriteSheet":"smallAsteroidSheet", "animationStart":"floating" } },
            {"pc.components.Spatial": { "x":0, "y":0, "dir":0 } },


        ]
    }

  // The entity factory will take whatever components are sent to it and map over any properties set (need to build a generic
  // way of "mixing" components together ... something like:
  //
  // entity = Entity.createFromJSON( ... );
  // - get the default spatial and mixin stuff from the entity factory process -- i.e. loading from tiled
  // entity.getComponent('spatial').mixin( entityFromTiledObjectLayer.getSpatial() );

// todo
e.addComponent(pc.components.Spatial.create(
{
x:x, y:y,
dir:pc.Math.rand(0, 359),
w:this.smallAsteroidSheet.frameWidth,
h:this.smallAsteroidSheet.frameHeight
}));
e.addComponent(pc.components.Physics.create(
{
force:25,
mass:2,
bounce:1,
shapes:[{shape:pc.CollisionShape.CIRCLE}],
collisionCategory:CollisionType.ENEMY,
collisionMask:CollisionType.FRIENDLY | CollisionType.ENEMY
}));

return e;



}